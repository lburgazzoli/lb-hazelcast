// *****************************************************************************
//
// *****************************************************************************

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()

        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.0.BUILD-SNAPSHOT'
    }
}

// *****************************************************************************
//
// *****************************************************************************

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'osgi'
    apply plugin: 'nexus'
    apply plugin: 'com.github.ben-manes.versions'

    version             = '3.3.1-SNAPSHOT'
    group               = 'com.github.lburgazzoli'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    ext {
        gradleVersion   = '2.1'
        gradleScriptDir = "${rootProject.projectDir}/gradle"

        if(!project.hasProperty('nexusUsername') && !project.hasProperty('nexusPassword')) {
            if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                nexusUsername = sonatypeUsername
                nexusPassword = sonatypePassword
            } else {
                nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
                nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
            }
        }

        prefix           = 'lb'
        isReleaseVersion = !version.endsWith("SNAPSHOT")
        gitRoot          = "https://github.com/lburgazzoli"
        gitProject       = "https://github.com/lburgazzoli/lb-hazelcast"

        versions = [
            slf4j             : '1.7.7',
            log4j2            : '2.0.2',
            jackson           : '2.4.2',
            jacksonSmile      : '2.4.2',
            hazelcast         : '3.3.1',
            guava             : '18.0',
            commonsLang       : '3.3.2',
            commonsCollections: '4.0',
            commonsPool       : '2.2',
            commonsIO         : '2.4',
            spring            : '4.1.0.RELEASE',
            springDataJpa     : '1.7.0.RELEASE',
            springReactor     : '1.1.4.RELEASE',
            springIntegration : '4.0.4.RELEASE',
            springBoot        : '1.2.0.BUILD-SNAPSHOT',
            junit             : '4.11',
            kryo              : '2.23.0',
            disruptor         : '3.3.0',
            gsCollections     : '5.1.0',
            groovy            : '2.3.7',
            jsonpath          : '1.2'
        ]
    }

    // *************************************************************************
    //
    // *************************************************************************

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    // *************************************************************************
    //
    // *************************************************************************


    repositories {
        mavenLocal()
        mavenCentral()

        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }

        maven { url 'https://oss.sonatype.org/content/repositories/releases' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
    
    dependencies {
        compile "org.slf4j:slf4j-api:$versions.slf4j"
        compile "org.slf4j:slf4j-ext:$versions.slf4j"
        compile "org.slf4j:jul-to-slf4j:$versions.slf4j"

        compile "org.apache.logging.log4j:log4j-api:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-core:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-jcl:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-slf4j-impl:$versions.log4j2"

        compile "com.google.guava:guava:$versions.guava"
        compile "commons-io:commons-io:$versions.commonsIO"
        compile "org.apache.commons:commons-pool2:$versions.commonsPool"
        compile "org.apache.commons:commons-lang3:$versions.commonsLang"
        compile "org.apache.commons:commons-collections4:$versions.commonsCollections"
        compile "com.goldmansachs:gs-collections:$versions.gsCollections"

        compile "org.codehaus.groovy:groovy-all:$versions.groovy"
        compile "com.hazelcast:hazelcast-all:$versions.hazelcast"
        compile "javax.inject:javax.inject:1"

        testCompile "junit:junit:$versions.junit"
    }

    test {
        testLogging {
            events          'failed'
            exceptionFormat 'full'
        }
    }

    [compileJava, compileTestJava]*.options*.compilerArgs = [
        "-Xlint:unchecked",
        "-Xlint:deprecation",
    ]

    // *************************************************************************
    //
    // *************************************************************************

    jar {
        baseName = "${project.prefix}-${project.name}"

        manifest.attributes['Bundle-Description'     ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-Name'            ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-SymbolicName'    ] = "${project.group}-${project.prefix}-${project.name}"
        manifest.attributes['Bundle-Version'         ] = project.version.replaceAll('-','.')
        manifest.attributes['Implementation-Title'   ] = "${project.group}-${project.prefix}-${project.name}-${project.version}"
        manifest.attributes['Implementation-Version' ] = project.version
        manifest.attributes['Implementation-Vendor'  ] = 'lb'

        manifest.classesDir = new File("$buildDir/classes/main")
        manifest.classpath = project.runtimeClasspath
    }

    // *************************************************************************
    //
    // *************************************************************************

    nexus {
        attachJavadoc         = true
        attachSources         = true
        attachTests           = false
        sign                  = false
    }

    modifyPom {
        project {
            name          = "${project.prefix}-${project.name}"
            description   = "${project.prefix}-${project.name}"
            url           = "${project.gitProject}"
            packaging     = 'jar'

            licenses {
                license {
                    name         = "The Apache Software License, Version 2.0"
                    url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "repo"
                }
            }

            scm {
                url                 = "${project.gitProject}"
                connection          = "scm:git:${project.gitProject}.git"
                developerConnection = "scm:git:${project.gitProject}.git"
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}

// *****************************************************************************
//
// *****************************************************************************

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'osgi'

    version             = '1.0.0.SNAPSHOT'
    group               = 'com.github.lburgazzoli'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    ext {
        gradleVersion   = '1.11'
        gradleScriptDir = "${rootProject.projectDir}/gradle"

        if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
            ciUsr = sonatypeUsername
            ciPwd = sonatypePassword
        } else {
            ciUsr = "$System.env.CI_DEPLOY_USERNAME"
            ciPwd = "$System.env.CI_DEPLOY_PASSWORD"
        }

        prefix           = 'lb'
        isReleaseVersion = !version.endsWith("SNAPSHOT")
        gitRoot          = "https://github.com/lburgazzoli"
        gitProject       = "https://github.com/lburgazzoli/lb-hazelcast"
        deploySnapshot   = "https://oss.sonatype.org/content/repositories/snapshots"

        versions = [
            slf4j             : '1.7.5',
            logback           : '1.1.2',
            log4j2            : '2.0-rc1',
            jackson           : '2.3.3',
            jacksonSmile      : '2.3.3',
            jacksonBson       : '2.3.1',
            hazelcast         : '3.2.1',
            guava             : '17.0',
            commonsLang       : '3.3.2',
            commonsCollections: '4.0',
            commonsPool       : '2.2',
            commonsIO         : '2.4',
            spring            : '4.0.4.RELEASE',
            springDataJpa     : '1.5.2.RELEASE',
            springReactor     : '1.1.0.RELEASE',
            springIntegration : '4.0.0.RELEASE',
            junit             : '4.11',
            kryo              : '2.23.0',
            disruptor         : '3.2.1',
            gsCollections     : '5.0.0',
            groovy            : '2.3.0',
            openhftLang       : '6.3.5',
            openhftChronicle  : '3.0.1',
            openhftCollection : '3.0.2',
            openhftAffinity   : '2.0.6',
            openhftCompiler   : '2.1.2',
            jsonpath          : '1.2'
        ]
    }

    // *************************************************************************
    //
    // *************************************************************************

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    // *************************************************************************
    //
    // *************************************************************************


    repositories {
        maven { url 'http://repo.springsource.org/release' }
        maven { url "http://repo.springsource.org/libs-milestone" }
        maven { url 'https://oss.sonatype.org/content/repositories/releases' }

        mavenLocal()
        mavenCentral()

        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        compile "org.slf4j:slf4j-api:$versions.slf4j"
        compile "org.slf4j:slf4j-ext:$versions.slf4j"
        compile "org.slf4j:jul-to-slf4j:$versions.slf4j"
        compile "org.slf4j:jcl-over-slf4j:$versions.slf4j"

        compile "org.apache.logging.log4j:log4j-api:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-core:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-slf4j-impl:$versions.log4j2"

        compile "com.google.guava:guava:$versions.guava"
        compile "commons-io:commons-io:$versions.commonsIO"
        compile "org.apache.commons:commons-pool2:$versions.commonsPool"
        compile "org.apache.commons:commons-lang3:$versions.commonsLang"
        compile "org.apache.commons:commons-collections4:$versions.commonsCollections"
        compile "com.goldmansachs:gs-collections:$versions.gsCollections"

        compile "org.codehaus.groovy:groovy:$versions.groovy"
        compile "com.hazelcast:hazelcast-all:$versions.hazelcast"

        testCompile "junit:junit:$versions.junit"
    }

    test {
        testLogging {
            events          'failed'
            exceptionFormat 'full'
        }
    }

    [compileJava, compileTestJava]*.options*.compilerArgs = [
        "-Xlint:unchecked",
        "-Xlint:deprecation",
    ]

    // *************************************************************************
    //
    // *************************************************************************

    jar {
        baseName = "${project.prefix}-${project.name}"

        manifest.attributes['Bundle-Description'     ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-Name'            ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-SymbolicName'    ] = "${project.group}-${project.prefix}-${project.name}"
        manifest.attributes['Bundle-Version'         ] = project.version
        manifest.attributes['Implementation-Title'   ] = "${project.group}-${project.prefix}-${project.name}-${project.version}"
        manifest.attributes['Implementation-Version' ] = project.version
        manifest.attributes['Implementation-Vendor'  ] = 'lb'

        manifest.classesDir = new File("$buildDir/classes/main")
        manifest.classpath = project.runtimeClasspath
    }

    // *************************************************************************
    //
    // *************************************************************************

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    // *************************************************************************
    //
    // *************************************************************************

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {

                repository(url: deploySnapshot) {
                    authentication(
                        userName: "${project.ciUsr}",
                        password: "${project.ciPwd}"
                    )
                }

                pom {
                    project {
                        name        = "${project.prefix}-${project.name}"
                        description = "${project.prefix}-${project.name}"
                        url         = "${project.gitProject}"
                        packaging   = 'jar'

                        licenses {
                            license {
                                name = "The Apache Software License, Version 2.0"
                                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                                distribution = "repo"
                            }
                        }

                        scm {
                            url                 = "${project.gitProject}"
                            connection          = "scm:git:${project.gitProject}.git"
                            developerConnection = "scm:git:${project.gitProject}.git"
                        }
                    }
                }
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}
